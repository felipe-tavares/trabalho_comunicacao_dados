{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * \r\n */\n'use strict';\n/**\r\n * EventSubscription represents a subscription to a particular event. It can\r\n * remove its own subscription.\r\n */\n\nvar EventSubscription = /*#__PURE__*/function () {\n  /**\r\n   * @param {EventSubscriptionVendor} subscriber the subscriber that controls\r\n   *   this subscription.\r\n   */\n  function EventSubscription(subscriber) {\n    this.subscriber = subscriber;\n  }\n  /**\r\n   * Removes this subscription from the subscriber that controls it.\r\n   */\n\n\n  var _proto = EventSubscription.prototype;\n\n  _proto.remove = function remove() {\n    this.subscriber.removeSubscription(this);\n  };\n\n  return EventSubscription;\n}();\n\nexport default EventSubscription;","map":{"version":3,"sources":["C:/Users/samuk_000/node-react/node_modules/react-native-web/dist/vendor/react-native/emitter/EventSubscription.js"],"names":["EventSubscription","subscriber","_proto","prototype","remove","removeSubscription"],"mappings":"AAAA;;;;;;;;;AASA;AAEA;;;;;AAIA,IAAIA,iBAAiB,GACrB,aACA,YAAY;AACV;;;;AAIA,WAASA,iBAAT,CAA2BC,UAA3B,EAAuC;AACrC,SAAKA,UAAL,GAAkBA,UAAlB;AACD;AACD;;;;;AAKA,MAAIC,MAAM,GAAGF,iBAAiB,CAACG,SAA/B;;AAEAD,EAAAA,MAAM,CAACE,MAAP,GAAgB,SAASA,MAAT,GAAkB;AAChC,SAAKH,UAAL,CAAgBI,kBAAhB,CAAmC,IAAnC;AACD,GAFD;;AAIA,SAAOL,iBAAP;AACD,CApBD,EAFA;;AAwBA,eAAeA,iBAAf","sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * \r\n */\r\n'use strict';\r\n\r\n/**\r\n * EventSubscription represents a subscription to a particular event. It can\r\n * remove its own subscription.\r\n */\r\nvar EventSubscription =\r\n/*#__PURE__*/\r\nfunction () {\r\n  /**\r\n   * @param {EventSubscriptionVendor} subscriber the subscriber that controls\r\n   *   this subscription.\r\n   */\r\n  function EventSubscription(subscriber) {\r\n    this.subscriber = subscriber;\r\n  }\r\n  /**\r\n   * Removes this subscription from the subscriber that controls it.\r\n   */\r\n\r\n\r\n  var _proto = EventSubscription.prototype;\r\n\r\n  _proto.remove = function remove() {\r\n    this.subscriber.removeSubscription(this);\r\n  };\r\n\r\n  return EventSubscription;\r\n}();\r\n\r\nexport default EventSubscription;"]},"metadata":{},"sourceType":"module"}