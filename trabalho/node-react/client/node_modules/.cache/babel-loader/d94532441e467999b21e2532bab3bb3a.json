{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samuk_000\\\\node-react\\\\client\\\\src\\\\Screen1.js\";\nimport React, { Component } from 'react';\nimport { TextInput, StyleSheet, View, ScrollView, Button, Image, KeyboardAvoidingView, ActivityIndicator, Alert } from 'react-native';\nimport logo from \"./logo.svg\";\nimport './Screen1.css';\nexport default class Screen1 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.callApi = async () => {\n      const response = await fetch('/api/mensagem');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    this.state = {\n      min: '',\n      max: '',\n      isLoading: false,\n      message: \"\",\n      response: ''\n    };\n  }\n  /*\r\n  state = {\r\n      response: ''\r\n  };\r\n  */\n\n\n  onChangeHandler(field, value) {\n    this.setState({\n      [field]: value\n    });\n  }\n\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      response: res.express\n    })).catch(err => console.log(err));\n  }\n\n  /*\r\n  getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }*/\n  renderButton() {\n    if (this.state.isLoading) return /*#__PURE__*/React.createElement(ActivityIndicator, {\n      size: \"large\",\n      style: styles.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 16\n      }\n    });\n    return /*#__PURE__*/React.createElement(View, {\n      style: styles.btn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      title: \"SORTEAR\",\n      color: \"#6542f4\" // onPress={() => /* this.getRandomIntInclusive()*/}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Screen1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"Screen1-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"Screen1-logo\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"Screen1-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, \"Bem vindo ao App React\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"Screen1-intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, this.state.response), /*#__PURE__*/React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextInput, {\n      style: styles.input,\n      placeholder: \"From: (min number)\",\n      value: this.state.min,\n      onChangeText: value => this.onChangeHandler('min', value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextInput, {\n      style: styles.input,\n      placeholder: \"To: (max number)\",\n      value: this.state.max,\n      onChangeText: value => this.onChangeHandler('max', value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    })), this.renderButton());\n  }\n\n}\nconst styles = StyleSheet.create({\n  container: {\n    padding: 10,\n    backgroundColor: 'white',\n    marginTop: 5,\n    marginBottom: 5,\n    elevation: 0.5\n  },\n  scrv: {\n    backgroundColor: '#2C1526'\n  },\n  input: {\n    paddingLeft: 5,\n    paddingRight: 5\n  },\n  btn: {\n    paddingTop: 20,\n    fontSize: 11\n  },\n  loading: {\n    padding: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/samuk_000/node-react/client/src/Screen1.js"],"names":["React","Component","TextInput","StyleSheet","View","ScrollView","Button","Image","KeyboardAvoidingView","ActivityIndicator","Alert","Screen1","constructor","props","callApi","response","fetch","body","json","status","Error","message","state","min","max","isLoading","onChangeHandler","field","value","setState","componentDidMount","then","res","express","catch","err","console","log","renderButton","styles","loading","btn","render","logo","container","input","create","padding","backgroundColor","marginTop","marginBottom","elevation","scrv","paddingLeft","paddingRight","paddingTop","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,IAAhC,EAAsCC,UAAtC,EAAkDC,MAAlD,EAA0DC,KAA1D,EAAiEC,oBAAjE,EAAuFC,iBAAvF,EAA0GC,KAA1G,QAAuH,cAAvH;;AAEA,OAAO,eAAP;AAEA,eAAe,MAAMC,OAAN,SAAsBV,SAAtB,CAAgC;AAC3CW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA0BrBC,OA1BqB,GA0BX,YAAY;AACpB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,UAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B,MAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AAE7B,aAAOJ,IAAP;AACD,KAhCoB;;AAGf,SAAKK,KAAL,GAAa;AACTC,MAAAA,GAAG,EAAE,EADI;AAETC,MAAAA,GAAG,EAAE,EAFI;AAGTC,MAAAA,SAAS,EAAE,KAHF;AAITJ,MAAAA,OAAO,EAAE,EAJA;AAKTN,MAAAA,QAAQ,EAAE;AALD,KAAb;AAOH;AACD;;;;;;;AAKAW,EAAAA,eAAe,CAACC,KAAD,EAAQC,KAAR,EAAe;AAC1B,SAAKC,QAAL,CAAc;AAAE,OAACF,KAAD,GAASC;AAAX,KAAd;AACH;;AAEHE,EAAAA,iBAAiB,GAAG;AAClB,SAAKhB,OAAL,GACGiB,IADH,CACQC,GAAG,IAAI,KAAKH,QAAL,CAAc;AAAEd,MAAAA,QAAQ,EAAEiB,GAAG,CAACC;AAAhB,KAAd,CADf,EAEGC,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB;AAGD;;AAUC;;;;;;AAOFG,EAAAA,YAAY,GAAG;AACb,QAAI,KAAKhB,KAAL,CAAWG,SAAf,EACI,oBAAO,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAgC,MAAA,KAAK,EAAEc,MAAM,CAACC,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAEJ,wBACQ,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AACI,MAAA,KAAK,EAAC,SADV;AAEI,MAAA,KAAK,EAAC,SAFV,CAGI;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADR;AASD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ;AAAK,MAAA,GAAG,EAAEC,IAAV;AAAgB,MAAA,SAAS,EAAC,cAA1B;AAAyC,MAAA,GAAG,EAAC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR,eAEQ;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFR,CADF,eAKM;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8B,KAAKrB,KAAL,CAAWP,QAAzC,CALN,eAMM,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEwB,MAAM,CAACK,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AACI,MAAA,KAAK,EAAEL,MAAM,CAACM,KADlB;AAEI,MAAA,WAAW,EAAC,oBAFhB;AAGI,MAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWC,GAHtB;AAII,MAAA,YAAY,EAAEK,KAAK,IAAI,KAAKF,eAAL,CAAqB,KAArB,EAA4BE,KAA5B,CAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CANN,eAcM,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEW,MAAM,CAACK,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AACI,MAAA,KAAK,EAAEL,MAAM,CAACM,KADlB;AAEI,MAAA,WAAW,EAAC,kBAFhB;AAGI,MAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWE,GAHtB;AAII,MAAA,YAAY,EAAEI,KAAK,IAAI,KAAKF,eAAL,CAAqB,KAArB,EAA4BE,KAA5B,CAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAdN,EAuBO,KAAKU,YAAL,EAvBP,CADF;AA2BD;;AArF4C;AAwF/C,MAAMC,MAAM,GAAGpC,UAAU,CAAC2C,MAAX,CAAkB;AAC7BF,EAAAA,SAAS,EAAE;AACPG,IAAAA,OAAO,EAAE,EADF;AAEPC,IAAAA,eAAe,EAAE,OAFV;AAGPC,IAAAA,SAAS,EAAE,CAHJ;AAIPC,IAAAA,YAAY,EAAE,CAJP;AAKPC,IAAAA,SAAS,EAAE;AALJ,GADkB;AAQ7BC,EAAAA,IAAI,EAAE;AACFJ,IAAAA,eAAe,EAAE;AADf,GARuB;AAW7BH,EAAAA,KAAK,EAAE;AACHQ,IAAAA,WAAW,EAAE,CADV;AAEHC,IAAAA,YAAY,EAAE;AAFX,GAXsB;AAe7Bb,EAAAA,GAAG,EAAE;AACDc,IAAAA,UAAU,EAAE,EADX;AAEDC,IAAAA,QAAQ,EAAE;AAFT,GAfwB;AAmB7BhB,EAAAA,OAAO,EAAE;AACLO,IAAAA,OAAO,EAAE;AADJ;AAnBoB,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { TextInput, StyleSheet, View, ScrollView, Button, Image, KeyboardAvoidingView, ActivityIndicator, Alert } from 'react-native';\r\nimport logo from './logo.svg';\r\nimport './Screen1.css';\r\n\r\nexport default class Screen1 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            min: '',\r\n            max: '',\r\n            isLoading: false,\r\n            message: \"\",\r\n            response: '',\r\n        };\r\n    }\r\n    /*\r\n    state = {\r\n        response: ''\r\n    };\r\n    */\r\n    onChangeHandler(field, value) {\r\n        this.setState({ [field]: value });\r\n    }\r\n\r\n  componentDidMount() {\r\n    this.callApi()\r\n      .then(res => this.setState({ response: res.express }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  callApi = async () => {\r\n    const response = await fetch('/api/mensagem');\r\n    const body = await response.json();\r\n    if (response.status !== 200) throw Error(body.message);\r\n\r\n    return body;\r\n  };\r\n\r\n    /*\r\n  getRandomIntInclusive(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }*/\r\n\r\n  renderButton() {\r\n    if (this.state.isLoading)\r\n        return <ActivityIndicator size=\"large\" style={styles.loading} />;\r\n\r\n    return (\r\n            <View style={styles.btn}>\r\n                <Button\r\n                    title='SORTEAR'\r\n                    color='#6542f4'\r\n                    // onPress={() => /* this.getRandomIntInclusive()*/}\r\n                />\r\n            </View>\r\n          )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Screen1\">\r\n        <header className=\"Screen1-header\">\r\n                <img src={logo} className=\"Screen1-logo\" alt=\"logo\" />\r\n                <h1 className=\"Screen1-title\">Bem vindo ao App React</h1>\r\n        </header>\r\n            <p className=\"Screen1-intro\">{this.state.response}</p>\r\n            <View style={styles.container}>\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"From: (min number)\"\r\n                    value={this.state.min}\r\n                    onChangeText={value => this.onChangeHandler('min', value)}\r\n                />\r\n            </View>\r\n            <View style={styles.container}>\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"To: (max number)\"\r\n                    value={this.state.max}\r\n                    onChangeText={value => this.onChangeHandler('max', value)}\r\n                />\r\n            </View>\r\n\r\n            {this.renderButton()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        padding: 10,\r\n        backgroundColor: 'white',\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n        elevation: 0.5,\r\n    },\r\n    scrv: {\r\n        backgroundColor: '#2C1526',\r\n    },\r\n    input: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5,\r\n    },\r\n    btn: {\r\n        paddingTop: 20,\r\n        fontSize: 11,\r\n    },\r\n    loading: {\r\n        padding: 20,\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}