{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samuk_000\\\\trabalho_comunicacao_dados-master\\\\trabalho\\\\node-react\\\\client\\\\src\\\\Screen1.js\";\nimport React, { Component } from 'react';\nimport { StyleSheet, View, ActivityIndicator, Button } from 'react-native';\nimport logo from \"./logo.svg\";\nimport './Screen1.css';\nimport Screen2 from './Screen2'; //function HomeScreen({ navigation }) {\n\nexport default class Screen1 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.callApi = async () => {\n      const response = await fetch('/api/mensagem');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const response = await fetch('/api/num1', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          post: this.state.min\n        })\n      });\n      const body = await response.text();\n      this.setState({\n        responseToPost1: body\n      });\n    };\n\n    this.handleTimbus = async f => {\n      f.preventDefault();\n      const response = await fetch('/api/num2', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          post: this.state.max\n        })\n      });\n      const body = await response.text();\n      this.setState({\n        responseToPost2: body\n      });\n    };\n\n    this.state = {\n      min: '',\n      max: '',\n      response: '',\n      post: '',\n      responseToPost1: '',\n      responseToPost2: '',\n      isLoading: false\n    };\n  }\n\n  acessarApp() {\n    this.setState({\n      isLoading: false\n    });\n    this.props.navigation.replace('Screen2'); //aqui manda pra screen2\n    //navigation.navigate('Profile', { name: 'Jane' })\n  }\n\n  onChangeHandler(field, value) {\n    this.setState({\n      [field]: value\n    });\n  }\n\n  renderButton() {\n    if (this.state.isLoading) return /*#__PURE__*/React.createElement(ActivityIndicator, {\n      size: \"large\",\n      style: styles.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 20\n      }\n    });\n    return /*#__PURE__*/React.createElement(View, {\n      style: styles.btn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      title: \"SORTEAR\",\n      color: \"#a08af7\",\n      onPress: () => this.acessarApp(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      response: res.express\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Screen1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"Screen1-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"Screen1-logo\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"Screen1-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 6\n      }\n    }, \"Welcome to React App\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"Screen1-intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }\n    }, this.state.response), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"From: (min number)\",\n      type: \"text\",\n      value: this.state.min,\n      onChange: e => this.setState({\n        min: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      color: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 6\n      }\n    }, \"SENTmin\")), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleTimbus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"To: (max number)\",\n      type: \"text\",\n      value: this.state.max,\n      onChange: f => this.setState({\n        max: f.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      color: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 6\n      }\n    }, \"SENTmax\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 5\n      }\n    }, this.state.responseToPost1), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }\n    }, this.state.responseToPost2), this.renderButton());\n  }\n\n}\nconst styles = StyleSheet.create({\n  container: {\n    padding: 10,\n    backgroundColor: 'white',\n    marginTop: 5,\n    marginBottom: 5,\n    elevation: 0.5\n  },\n  scrv: {\n    backgroundColor: '#2C1526'\n  },\n  input: {\n    paddingLeft: 5,\n    paddingRight: 5\n  },\n  btn: {\n    paddingTop: 20,\n    fontSize: 11\n  },\n  loading: {\n    padding: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/samuk_000/trabalho_comunicacao_dados-master/trabalho/node-react/client/src/Screen1.js"],"names":["React","Component","StyleSheet","View","ActivityIndicator","Button","Screen2","Screen1","constructor","props","callApi","response","fetch","body","json","status","Error","message","handleSubmit","e","preventDefault","method","headers","JSON","stringify","post","state","min","text","setState","responseToPost1","handleTimbus","f","max","responseToPost2","isLoading","acessarApp","navigation","replace","onChangeHandler","field","value","renderButton","styles","loading","btn","componentDidMount","then","res","express","catch","err","console","log","render","logo","target","create","container","padding","backgroundColor","marginTop","marginBottom","elevation","scrv","input","paddingLeft","paddingRight","paddingTop","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,iBAA3B,EAA8CC,MAA9C,QAA4D,cAA5D;;AAEA,OAAO,eAAP;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CAEA;;AAEA,eAAe,MAAMC,OAAN,SAAsBN,SAAtB,CAAgC;AAC3CO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA6CtBC,OA7CsB,GA6CZ,YAAY;AACrB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,UAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B,MAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AAE7B,aAAOJ,IAAP;AACG,KAnDkB;;AAAA,SAqDnBK,YArDmB,GAqDJ,MAAMC,CAAN,IAAW;AACtBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAD,EAAc;AACtCS,QAAAA,MAAM,EAAE,MAD8B;AAEtCC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAF6B;AAKtCT,QAAAA,IAAI,EAAEU,IAAI,CAACC,SAAL,CAAe;AAAEC,UAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC;AAAnB,SAAf;AALgC,OAAd,CAA5B;AAOA,YAAMd,IAAI,GAAG,MAAMF,QAAQ,CAACiB,IAAT,EAAnB;AAEA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,eAAe,EAAEjB;AAAnB,OAAd;AACH,KAjEkB;;AAAA,SAmEnBkB,YAnEmB,GAmEJ,MAAMC,CAAN,IAAW;AACtBA,MAAAA,CAAC,CAACZ,cAAF;AACA,YAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAD,EAAc;AACtCS,QAAAA,MAAM,EAAE,MAD8B;AAEtCC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAF6B;AAKtCT,QAAAA,IAAI,EAAEU,IAAI,CAACC,SAAL,CAAe;AAAEC,UAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWO;AAAnB,SAAf;AALgC,OAAd,CAA5B;AAOA,YAAMpB,IAAI,GAAG,MAAMF,QAAQ,CAACiB,IAAT,EAAnB;AAEA,WAAKC,QAAL,CAAc;AAAEK,QAAAA,eAAe,EAAErB;AAAnB,OAAd;AACH,KA/EkB;;AAGf,SAAKa,KAAL,GAAa;AACTC,MAAAA,GAAG,EAAE,EADI;AAETM,MAAAA,GAAG,EAAE,EAFI;AAGTtB,MAAAA,QAAQ,EAAE,EAHD;AAITc,MAAAA,IAAI,EAAE,EAJG;AAKTK,MAAAA,eAAe,EAAE,EALR;AAMTI,MAAAA,eAAe,EAAE,EANR;AAOTC,MAAAA,SAAS,EAAE;AAPF,KAAb;AASH;;AAEDC,EAAAA,UAAU,GAAG;AACT,SAAKP,QAAL,CAAc;AAAEM,MAAAA,SAAS,EAAE;AAAb,KAAd;AACA,SAAK1B,KAAL,CAAW4B,UAAX,CAAsBC,OAAtB,CAA8B,SAA9B,EAFS,CAEgC;AAC/C;AACG;;AAEDC,EAAAA,eAAe,CAACC,KAAD,EAAQC,KAAR,EAAe;AAC1B,SAAKZ,QAAL,CAAc;AAAE,OAACW,KAAD,GAASC;AAAX,KAAd;AACH;;AAEDC,EAAAA,YAAY,GAAG;AACX,QAAI,KAAKhB,KAAL,CAAWS,SAAf,EACI,oBAAO,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAgC,MAAA,KAAK,EAAEQ,MAAM,CAACC,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAEJ,wBACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AACI,MAAA,KAAK,EAAC,SADV;AAEI,MAAA,KAAK,EAAC,SAFV;AAGI,MAAA,OAAO,EAAE,MAAM,KAAKT,UAAL,EAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AASH;;AAEJU,EAAAA,iBAAiB,GAAG;AACnB,SAAKpC,OAAL,GACGqC,IADH,CACQC,GAAG,IAAI,KAAKnB,QAAL,CAAc;AAAElB,MAAAA,QAAQ,EAAEqC,GAAG,CAACC;AAAhB,KAAd,CADf,EAEGC,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB;AAGA;;AAsCDG,EAAAA,MAAM,GAAG;AACR,wBACC;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,GAAG,EAAEC,IAAV;AAAgB,MAAA,SAAS,EAAC,cAA1B;AAAyC,MAAA,GAAG,EAAC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAEC;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFD,CADD,eAKC;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8B,KAAK7B,KAAL,CAAWf,QAAzC,CALD,eAOC;AAAM,MAAA,QAAQ,EAAE,KAAKO,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AACC,MAAA,WAAW,EAAC,oBADb;AAEC,MAAA,IAAI,EAAC,MAFN;AAGC,MAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWC,GAHnB;AAIC,MAAA,QAAQ,EAAER,CAAC,IAAI,KAAKU,QAAL,CAAc;AAAEF,QAAAA,GAAG,EAAER,CAAC,CAACqC,MAAF,CAASf;AAAhB,OAAd,CAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAOC;AAAQ,MAAA,IAAI,EAAC,QAAb;AACE,MAAA,KAAK,EAAC,OADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPD,CAPD,eAmBC;AAAM,MAAA,QAAQ,EAAE,KAAKV,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AACC,MAAA,WAAW,EAAC,kBADb;AAEC,MAAA,IAAI,EAAC,MAFN;AAGC,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWO,GAHnB;AAIC,MAAA,QAAQ,EAAED,CAAC,IAAI,KAAKH,QAAL,CAAc;AAAEI,QAAAA,GAAG,EAAED,CAAC,CAACwB,MAAF,CAASf;AAAhB,OAAd,CAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAOC;AACC,MAAA,IAAI,EAAC,QADN;AAEC,MAAA,KAAK,EAAC,OAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPD,CAnBD,eAgCC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKf,KAAL,CAAWI,eAAf,CAhCD,eAiCC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKJ,KAAL,CAAWQ,eAAf,CAjCD,EAkCE,KAAKQ,YAAL,EAlCF,CADD;AAsCA;;AAzH6C;AA4H/C,MAAMC,MAAM,GAAGzC,UAAU,CAACuD,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,OAAO,EAAE,EADF;AAEPC,IAAAA,eAAe,EAAE,OAFV;AAGPC,IAAAA,SAAS,EAAE,CAHJ;AAIPC,IAAAA,YAAY,EAAE,CAJP;AAKPC,IAAAA,SAAS,EAAE;AALJ,GADkB;AAQ7BC,EAAAA,IAAI,EAAE;AACFJ,IAAAA,eAAe,EAAE;AADf,GARuB;AAW7BK,EAAAA,KAAK,EAAE;AACHC,IAAAA,WAAW,EAAE,CADV;AAEHC,IAAAA,YAAY,EAAE;AAFX,GAXsB;AAe7BtB,EAAAA,GAAG,EAAE;AACDuB,IAAAA,UAAU,EAAE,EADX;AAEDC,IAAAA,QAAQ,EAAE;AAFT,GAfwB;AAmB7BzB,EAAAA,OAAO,EAAE;AACLe,IAAAA,OAAO,EAAE;AADJ;AAnBoB,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { StyleSheet, View, ActivityIndicator, Button } from 'react-native';\r\nimport logo from './logo.svg';\r\nimport './Screen1.css';\r\nimport Screen2 from './Screen2'\r\n\r\n//function HomeScreen({ navigation }) {\r\n\r\nexport default class Screen1 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            min: '',\r\n            max: '',\r\n            response: '',\r\n            post: '',\r\n            responseToPost1: '',\r\n            responseToPost2: '',\r\n            isLoading: false,\r\n        };\r\n    }\r\n\r\n    acessarApp() {\r\n        this.setState({ isLoading: false });\r\n        this.props.navigation.replace('Screen2');//aqui manda pra screen2\r\n\t\t//navigation.navigate('Profile', { name: 'Jane' })\r\n    }\r\n\r\n    onChangeHandler(field, value) {\r\n        this.setState({ [field]: value });\r\n    }\r\n\r\n    renderButton() {\r\n        if (this.state.isLoading)\r\n            return <ActivityIndicator size=\"large\" style={styles.loading} />;\r\n\r\n        return (\r\n            <View style={styles.btn}>\r\n                <Button\r\n                    title='SORTEAR'\r\n                    color='#a08af7'\r\n                    onPress={() => this.acessarApp()}\r\n                />\r\n            </View>\r\n        )\r\n    }\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tthis.callApi()\r\n\t\t  .then(res => this.setState({ response: res.express }))\r\n\t\t  .catch(err => console.log(err));\r\n\t}\r\n\r\n\tcallApi = async () => {\r\n\t\tconst response = await fetch('/api/mensagem');\r\n\t\tconst body = await response.json();\r\n\t\tif (response.status !== 200) throw Error(body.message);\r\n\r\n\t\treturn body;\r\n    };\r\n    \r\n    handleSubmit = async e => {\r\n        e.preventDefault();\r\n        const response = await fetch('/api/num1', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ post: this.state.min }),\r\n        });\r\n        const body = await response.text();\r\n\r\n        this.setState({ responseToPost1: body });\r\n    };\r\n    \r\n    handleTimbus = async f => {\r\n        f.preventDefault();\r\n        const response = await fetch('/api/num2', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ post: this.state.max }),\r\n        });\r\n        const body = await response.text();\r\n\r\n        this.setState({ responseToPost2: body });\r\n    };\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"Screen1\">\r\n\t\t\t\t<header className=\"Screen1-header\">\r\n\t\t\t\t\t<img src={logo} className=\"Screen1-logo\" alt=\"logo\" />\r\n\t\t\t\t\t<h4 className=\"Screen1-title\">Welcome to React App</h4>\r\n\t\t\t\t</header>\r\n\t\t\t\t<p className=\"Screen1-intro\">{this.state.response}</p>\r\n\r\n\t\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tplaceholder=\"From: (min number)\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tvalue={this.state.min}\r\n\t\t\t\t\t\tonChange={e => this.setState({ min: e.target.value })}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button type=\"submit\"\r\n\t\t\t\t\t\t\tcolor='white'\r\n\t\t\t\t\t>SENTmin\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t\t<form onSubmit={this.handleTimbus}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tplaceholder=\"To: (max number)\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tvalue={this.state.max}\r\n\t\t\t\t\t\tonChange={f => this.setState({ max: f.target.value })}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tcolor='white'\r\n\t\t\t\t\t>SENTmax\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t\t<p>{this.state.responseToPost1}</p>\r\n\t\t\t\t<p>{this.state.responseToPost2}</p>\r\n\t\t\t\t{this.renderButton()}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        padding: 10,\r\n        backgroundColor: 'white',\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n        elevation: 0.5,\r\n    },\r\n    scrv: {\r\n        backgroundColor: '#2C1526',\r\n    },\r\n    input: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5,\r\n    },\r\n    btn: {\r\n        paddingTop: 20,\r\n        fontSize: 11,\r\n    },\r\n    loading: {\r\n        padding: 20,\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}