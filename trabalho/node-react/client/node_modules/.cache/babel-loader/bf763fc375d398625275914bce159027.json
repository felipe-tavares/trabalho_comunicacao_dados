{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samuk_000\\\\trabalho_comunicacao_dados-master\\\\trabalho\\\\node-react\\\\client\\\\src\\\\Screen2.js\";\nimport React, { Component } from 'react';\nimport { View, Text, StyleSheet, ActivityIndicator, Button } from 'react-native';\nimport logo from \"./logo.svg\";\nimport './Screen1.css';\nexport default class Screen2 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.callApi = async () => {\n      const response = await fetch('/api/sort');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    this.state = {\n      post: '',\n      Sort: '',\n      response: ''\n    };\n  }\n\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      response: res.express\n    })).catch(err => console.log(err));\n  }\n\n  acessarScreen1() {\n    this.setState({\n      isLoading: false\n    });\n    this.props.navigation.replace('Screen1'); //aqui volta pra screen1\n  }\n\n  renderButton() {\n    if (this.state.isLoading) return /*#__PURE__*/React.createElement(ActivityIndicator, {\n      size: \"large\",\n      style: styles.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 20\n      }\n    });\n    return /*#__PURE__*/React.createElement(View, {\n      style: styles.btn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      title: \"VOLTAR\",\n      color: \"#a08af7\",\n      onPress: () => this.acessarScreen1(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Screen1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"Screen1-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"Screen1-logo\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"Screen1-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, \"Numero Sorteado:\")), /*#__PURE__*/React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      style: {\n        color: 'red',\n        fontSize: 20\n      },\n      h1: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, this.state.response)), this.renderButton()));\n  }\n\n}\n;\nconst styles = StyleSheet.create({\n  container: {\n    padding: 10,\n    backgroundColor: 'white',\n    marginTop: 5,\n    marginBottom: 5,\n    elevation: 0.5\n  },\n  scrv: {\n    backgroundColor: '#2C1526'\n  },\n  input: {\n    paddingLeft: 5,\n    paddingRight: 5\n  },\n  btn: {\n    paddingTop: 20,\n    fontSize: 11\n  },\n  loading: {\n    padding: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/samuk_000/trabalho_comunicacao_dados-master/trabalho/node-react/client/src/Screen2.js"],"names":["React","Component","View","Text","StyleSheet","ActivityIndicator","Button","Screen2","constructor","props","callApi","response","fetch","body","json","status","Error","message","state","post","Sort","componentDidMount","then","res","setState","express","catch","err","console","log","acessarScreen1","isLoading","navigation","replace","renderButton","styles","loading","btn","render","logo","color","fontSize","create","container","padding","backgroundColor","marginTop","marginBottom","elevation","scrv","input","paddingLeft","paddingRight","paddingTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, Text, StyleSheet, ActivityIndicator, Button } from 'react-native';\r\nimport logo from './logo.svg';\r\nimport './Screen1.css';\r\n\r\nexport default class Screen2 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            post: '',\r\n            Sort: '',\r\n            response: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.callApi()\r\n            .then(res => this.setState({ response: res.express }))\r\n            .catch(err => console.log(err));\r\n\r\n    }\r\n\r\n    callApi = async () => {\r\n        const response = await fetch('/api/sort');\r\n        const body = await response.json();\r\n        if (response.status !== 200) throw Error(body.message);\r\n\r\n        return body;\r\n    };\r\n\r\n    acessarScreen1() {\r\n        this.setState({ isLoading: false });\r\n        this.props.navigation.replace('Screen1');//aqui volta pra screen1\r\n    }\r\n\r\n    renderButton() {\r\n        if (this.state.isLoading)\r\n            return <ActivityIndicator size=\"large\" style={styles.loading} />;\r\n\r\n        return (\r\n            <View style={styles.btn}>\r\n                <Button\r\n                    title='VOLTAR'\r\n                    color='#a08af7'\r\n                    onPress={() => this.acessarScreen1()}\r\n                />\r\n            </View>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"Screen1\">\r\n                    <header className=\"Screen1-header\">\r\n                        <img src={logo} className=\"Screen1-logo\" alt=\"logo\" />\r\n                        <h4 className=\"Screen1-title\">Numero Sorteado:</h4>\r\n                    </header>\r\n\r\n                    <View>\r\n                        <Text style={{ color: 'red', fontSize: 20 }} h1>{this.state.response}</Text>\r\n                    </View>\r\n                    {this.renderButton()}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        padding: 10,\r\n        backgroundColor: 'white',\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n        elevation: 0.5,\r\n    },\r\n    scrv: {\r\n        backgroundColor: '#2C1526',\r\n    },\r\n    input: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5,\r\n    },\r\n    btn: {\r\n        paddingTop: 20,\r\n        fontSize: 11,\r\n    },\r\n    loading: {\r\n        padding: 20,\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}