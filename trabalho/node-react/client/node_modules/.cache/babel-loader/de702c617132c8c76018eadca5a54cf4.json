{"ast":null,"code":"export const isnan = v => Number.isNaN(v);\nexport const isValidNumber = v => typeof v === 'number' && !Number.isNaN(v);\nexport const TEST_MIN_IF_NOT_NAN = (value, limit) => !isnan(limit) && (limit < 0 && value <= limit || limit >= 0 && value >= limit);\nexport const VEC_LEN_SQ = ({\n  x = 0,\n  y = 0\n} = {}) => x * x + y * y;\nexport const TEST_MAX_IF_NOT_NAN = (value, max) => !isnan(max) && (max < 0 && value < max || max >= 0 && value > max);\nexport function fireAfterInterval(method, interval) {\n  if (!interval) {\n    method();\n    return null;\n  }\n\n  return setTimeout(() => method(), interval);\n}","map":{"version":3,"sources":["C:/Users/samuk_000/trabalho_comunicacao_dados-master/trabalho/node-react/node_modules/react-native-gesture-handler/web/utils.js"],"names":["isnan","v","Number","isNaN","isValidNumber","TEST_MIN_IF_NOT_NAN","value","limit","VEC_LEN_SQ","x","y","TEST_MAX_IF_NOT_NAN","max","fireAfterInterval","method","interval","setTimeout"],"mappings":"AAAA,OAAO,MAAMA,KAAK,GAAGC,CAAC,IAAIC,MAAM,CAACC,KAAP,CAAaF,CAAb,CAAnB;AAEP,OAAO,MAAMG,aAAa,GAAGH,CAAC,IAAI,OAAOA,CAAP,KAAa,QAAb,IAAyB,CAACC,MAAM,CAACC,KAAP,CAAaF,CAAb,CAArD;AAEP,OAAO,MAAMI,mBAAmB,GAAG,CAACC,KAAD,EAAQC,KAAR,KACjC,CAACP,KAAK,CAACO,KAAD,CAAN,KACEA,KAAK,GAAG,CAAR,IAAaD,KAAK,IAAIC,KAAvB,IAAkCA,KAAK,IAAI,CAAT,IAAcD,KAAK,IAAIC,KAD1D,CADK;AAGP,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,CAAC,GAAG,CAAN;AAASC,EAAAA,CAAC,GAAG;AAAb,IAAmB,EAApB,KAA2BD,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAA1D;AACP,OAAO,MAAMC,mBAAmB,GAAG,CAACL,KAAD,EAAQM,GAAR,KACjC,CAACZ,KAAK,CAACY,GAAD,CAAN,KAAiBA,GAAG,GAAG,CAAN,IAAWN,KAAK,GAAGM,GAApB,IAA6BA,GAAG,IAAI,CAAP,IAAYN,KAAK,GAAGM,GAAjE,CADK;AAGP,OAAO,SAASC,iBAAT,CAA2BC,MAA3B,EAAmCC,QAAnC,EAA6C;AAClD,MAAI,CAACA,QAAL,EAAe;AACbD,IAAAA,MAAM;AACN,WAAO,IAAP;AACD;;AACD,SAAOE,UAAU,CAAC,MAAMF,MAAM,EAAb,EAAiBC,QAAjB,CAAjB;AACD","sourcesContent":["export const isnan = v => Number.isNaN(v);\r\n\r\nexport const isValidNumber = v => typeof v === 'number' && !Number.isNaN(v);\r\n\r\nexport const TEST_MIN_IF_NOT_NAN = (value, limit) =>\r\n  !isnan(limit) &&\r\n  ((limit < 0 && value <= limit) || (limit >= 0 && value >= limit));\r\nexport const VEC_LEN_SQ = ({ x = 0, y = 0 } = {}) => x * x + y * y;\r\nexport const TEST_MAX_IF_NOT_NAN = (value, max) =>\r\n  !isnan(max) && ((max < 0 && value < max) || (max >= 0 && value > max));\r\n\r\nexport function fireAfterInterval(method, interval) {\r\n  if (!interval) {\r\n    method();\r\n    return null;\r\n  }\r\n  return setTimeout(() => method(), interval);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}