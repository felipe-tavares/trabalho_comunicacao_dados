{"ast":null,"code":"/**\r\n * Copyright (c) 2015-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n * @format\r\n */\n'use strict';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nimport { AnimatedEvent } from './AnimatedEvent';\nimport AnimatedProps from './nodes/AnimatedProps';\nimport React from 'react';\nimport invariant from 'fbjs/lib/invariant';\n\nfunction createAnimatedComponent(Component, defaultProps) {\n  invariant(typeof Component !== 'function' || Component.prototype && Component.prototype.isReactComponent, '`createAnimatedComponent` does not support stateless functional components; ' + 'use a class component instead.');\n\n  var AnimatedComponent = /*#__PURE__*/function (_React$Component) {\n    _inheritsLoose(AnimatedComponent, _React$Component);\n\n    function AnimatedComponent(props) {\n      var _this;\n\n      _this = _React$Component.call(this, props) || this;\n      _this._invokeAnimatedPropsCallbackOnMount = false;\n      _this._eventDetachers = [];\n\n      _this._animatedPropsCallback = function () {\n        if (_this._component == null) {\n          // AnimatedProps is created in will-mount because it's used in render.\n          // But this callback may be invoked before mount in async mode,\n          // In which case we should defer the setNativeProps() call.\n          // React may throw away uncommitted work in async mode,\n          // So a deferred call won't always be invoked.\n          _this._invokeAnimatedPropsCallbackOnMount = true;\n        } else if (AnimatedComponent.__skipSetNativeProps_FOR_TESTS_ONLY || typeof _this._component.setNativeProps !== 'function') {\n          _this.forceUpdate();\n        } else if (!_this._propsAnimated.__isNative) {\n          _this._component.setNativeProps(_this._propsAnimated.__getAnimatedValue());\n        } else {\n          throw new Error('Attempting to run JS driven animation on animated ' + 'node that has been moved to \"native\" earlier by starting an ' + 'animation with `useNativeDriver: true`');\n        }\n      };\n\n      _this._setComponentRef = function (c) {\n        _this._prevComponent = _this._component;\n        _this._component = c;\n      };\n\n      return _this;\n    }\n\n    var _proto = AnimatedComponent.prototype;\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      this._propsAnimated && this._propsAnimated.__detach();\n\n      this._detachNativeEvents();\n    };\n\n    _proto.setNativeProps = function setNativeProps(props) {\n      this._component.setNativeProps(props);\n    };\n\n    _proto.UNSAFE_componentWillMount = function UNSAFE_componentWillMount() {\n      this._attachProps(this.props);\n    };\n\n    _proto.componentDidMount = function componentDidMount() {\n      if (this._invokeAnimatedPropsCallbackOnMount) {\n        this._invokeAnimatedPropsCallbackOnMount = false;\n\n        this._animatedPropsCallback();\n      }\n\n      this._propsAnimated.setNativeView(this._component);\n\n      this._attachNativeEvents();\n    };\n\n    _proto._attachNativeEvents = function _attachNativeEvents() {\n      var _this2 = this; // Make sure to get the scrollable node for components that implement\n      // `ScrollResponder.Mixin`.\n\n\n      var scrollableNode = this._component.getScrollableNode ? this._component.getScrollableNode() : this._component;\n\n      var _loop = function _loop(key) {\n        var prop = _this2.props[key];\n\n        if (prop instanceof AnimatedEvent && prop.__isNative) {\n          prop.__attach(scrollableNode, key);\n\n          _this2._eventDetachers.push(function () {\n            return prop.__detach(scrollableNode, key);\n          });\n        }\n      };\n\n      for (var key in this.props) {\n        _loop(key);\n      }\n    };\n\n    _proto._detachNativeEvents = function _detachNativeEvents() {\n      this._eventDetachers.forEach(function (remove) {\n        return remove();\n      });\n\n      this._eventDetachers = [];\n    } // The system is best designed when setNativeProps is implemented. It is\n    // able to avoid re-rendering and directly set the attributes that changed.\n    // However, setNativeProps can only be implemented on leaf native\n    // components. If you want to animate a composite component, you need to\n    // re-render it. In this case, we have a fallback that uses forceUpdate.\n    ;\n\n    _proto._attachProps = function _attachProps(nextProps) {\n      var oldPropsAnimated = this._propsAnimated;\n      this._propsAnimated = new AnimatedProps(nextProps, this._animatedPropsCallback); // When you call detach, it removes the element from the parent list\n      // of children. If it goes to 0, then the parent also detaches itself\n      // and so on.\n      // An optimization is to attach the new elements and THEN detach the old\n      // ones instead of detaching and THEN attaching.\n      // This way the intermediate state isn't to go to 0 and trigger\n      // this expensive recursive detaching to then re-attach everything on\n      // the very next operation.\n\n      oldPropsAnimated && oldPropsAnimated.__detach();\n    };\n\n    _proto.UNSAFE_componentWillReceiveProps = function UNSAFE_componentWillReceiveProps(newProps) {\n      this._attachProps(newProps);\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n      if (this._component !== this._prevComponent) {\n        this._propsAnimated.setNativeView(this._component);\n      }\n\n      if (this._component !== this._prevComponent || prevProps !== this.props) {\n        this._detachNativeEvents();\n\n        this._attachNativeEvents();\n      }\n    };\n\n    _proto.render = function render() {\n      var props = this._propsAnimated.__getValue();\n\n      return React.createElement(Component, _extends({}, defaultProps, props, {\n        ref: this._setComponentRef // The native driver updates views directly through the UI thread so we\n        // have to make sure the view doesn't get optimized away because it cannot\n        // go through the NativeViewHierarchyManager since it operates on the shadow\n        // thread.\n        ,\n        collapsable: false\n      }));\n    }; // A third party library can use getNode()\n    // to get the node reference of the decorated component\n\n\n    _proto.getNode = function getNode() {\n      return this._component;\n    };\n\n    return AnimatedComponent;\n  }(React.Component);\n\n  AnimatedComponent.__skipSetNativeProps_FOR_TESTS_ONLY = false;\n  var propTypes = Component.propTypes;\n  return AnimatedComponent;\n}\n\nexport default createAnimatedComponent;","map":{"version":3,"sources":["C:/Users/samuk_000/trabalho_comunicacao_dados-master/trabalho/node-react/node_modules/react-native-web/dist/vendor/react-native/Animated/createAnimatedComponent.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_inheritsLoose","subClass","superClass","create","constructor","__proto__","AnimatedEvent","AnimatedProps","React","invariant","createAnimatedComponent","Component","defaultProps","isReactComponent","AnimatedComponent","_React$Component","props","_this","_invokeAnimatedPropsCallbackOnMount","_eventDetachers","_animatedPropsCallback","_component","__skipSetNativeProps_FOR_TESTS_ONLY","setNativeProps","forceUpdate","_propsAnimated","__isNative","__getAnimatedValue","Error","_setComponentRef","c","_prevComponent","_proto","componentWillUnmount","__detach","_detachNativeEvents","UNSAFE_componentWillMount","_attachProps","componentDidMount","setNativeView","_attachNativeEvents","_this2","scrollableNode","getScrollableNode","_loop","prop","__attach","push","forEach","remove","nextProps","oldPropsAnimated","UNSAFE_componentWillReceiveProps","newProps","componentDidUpdate","prevProps","render","__getValue","createElement","ref","collapsable","getNode","propTypes"],"mappings":"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","sourcesContent":["/**\r\n * Copyright (c) 2015-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n * @format\r\n */\r\n'use strict';\r\n\r\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\r\n\r\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\r\n\r\nimport { AnimatedEvent } from './AnimatedEvent';\r\nimport AnimatedProps from './nodes/AnimatedProps';\r\nimport React from 'react';\r\nimport invariant from 'fbjs/lib/invariant';\r\n\r\nfunction createAnimatedComponent(Component, defaultProps) {\r\n  invariant(typeof Component !== 'function' || Component.prototype && Component.prototype.isReactComponent, '`createAnimatedComponent` does not support stateless functional components; ' + 'use a class component instead.');\r\n\r\n  var AnimatedComponent =\r\n  /*#__PURE__*/\r\n  function (_React$Component) {\r\n    _inheritsLoose(AnimatedComponent, _React$Component);\r\n\r\n    function AnimatedComponent(props) {\r\n      var _this;\r\n\r\n      _this = _React$Component.call(this, props) || this;\r\n      _this._invokeAnimatedPropsCallbackOnMount = false;\r\n      _this._eventDetachers = [];\r\n\r\n      _this._animatedPropsCallback = function () {\r\n        if (_this._component == null) {\r\n          // AnimatedProps is created in will-mount because it's used in render.\r\n          // But this callback may be invoked before mount in async mode,\r\n          // In which case we should defer the setNativeProps() call.\r\n          // React may throw away uncommitted work in async mode,\r\n          // So a deferred call won't always be invoked.\r\n          _this._invokeAnimatedPropsCallbackOnMount = true;\r\n        } else if (AnimatedComponent.__skipSetNativeProps_FOR_TESTS_ONLY || typeof _this._component.setNativeProps !== 'function') {\r\n          _this.forceUpdate();\r\n        } else if (!_this._propsAnimated.__isNative) {\r\n          _this._component.setNativeProps(_this._propsAnimated.__getAnimatedValue());\r\n        } else {\r\n          throw new Error('Attempting to run JS driven animation on animated ' + 'node that has been moved to \"native\" earlier by starting an ' + 'animation with `useNativeDriver: true`');\r\n        }\r\n      };\r\n\r\n      _this._setComponentRef = function (c) {\r\n        _this._prevComponent = _this._component;\r\n        _this._component = c;\r\n      };\r\n\r\n      return _this;\r\n    }\r\n\r\n    var _proto = AnimatedComponent.prototype;\r\n\r\n    _proto.componentWillUnmount = function componentWillUnmount() {\r\n      this._propsAnimated && this._propsAnimated.__detach();\r\n\r\n      this._detachNativeEvents();\r\n    };\r\n\r\n    _proto.setNativeProps = function setNativeProps(props) {\r\n      this._component.setNativeProps(props);\r\n    };\r\n\r\n    _proto.UNSAFE_componentWillMount = function UNSAFE_componentWillMount() {\r\n      this._attachProps(this.props);\r\n    };\r\n\r\n    _proto.componentDidMount = function componentDidMount() {\r\n      if (this._invokeAnimatedPropsCallbackOnMount) {\r\n        this._invokeAnimatedPropsCallbackOnMount = false;\r\n\r\n        this._animatedPropsCallback();\r\n      }\r\n\r\n      this._propsAnimated.setNativeView(this._component);\r\n\r\n      this._attachNativeEvents();\r\n    };\r\n\r\n    _proto._attachNativeEvents = function _attachNativeEvents() {\r\n      var _this2 = this;\r\n\r\n      // Make sure to get the scrollable node for components that implement\r\n      // `ScrollResponder.Mixin`.\r\n      var scrollableNode = this._component.getScrollableNode ? this._component.getScrollableNode() : this._component;\r\n\r\n      var _loop = function _loop(key) {\r\n        var prop = _this2.props[key];\r\n\r\n        if (prop instanceof AnimatedEvent && prop.__isNative) {\r\n          prop.__attach(scrollableNode, key);\r\n\r\n          _this2._eventDetachers.push(function () {\r\n            return prop.__detach(scrollableNode, key);\r\n          });\r\n        }\r\n      };\r\n\r\n      for (var key in this.props) {\r\n        _loop(key);\r\n      }\r\n    };\r\n\r\n    _proto._detachNativeEvents = function _detachNativeEvents() {\r\n      this._eventDetachers.forEach(function (remove) {\r\n        return remove();\r\n      });\r\n\r\n      this._eventDetachers = [];\r\n    } // The system is best designed when setNativeProps is implemented. It is\r\n    // able to avoid re-rendering and directly set the attributes that changed.\r\n    // However, setNativeProps can only be implemented on leaf native\r\n    // components. If you want to animate a composite component, you need to\r\n    // re-render it. In this case, we have a fallback that uses forceUpdate.\r\n    ;\r\n\r\n    _proto._attachProps = function _attachProps(nextProps) {\r\n      var oldPropsAnimated = this._propsAnimated;\r\n      this._propsAnimated = new AnimatedProps(nextProps, this._animatedPropsCallback); // When you call detach, it removes the element from the parent list\r\n      // of children. If it goes to 0, then the parent also detaches itself\r\n      // and so on.\r\n      // An optimization is to attach the new elements and THEN detach the old\r\n      // ones instead of detaching and THEN attaching.\r\n      // This way the intermediate state isn't to go to 0 and trigger\r\n      // this expensive recursive detaching to then re-attach everything on\r\n      // the very next operation.\r\n\r\n      oldPropsAnimated && oldPropsAnimated.__detach();\r\n    };\r\n\r\n    _proto.UNSAFE_componentWillReceiveProps = function UNSAFE_componentWillReceiveProps(newProps) {\r\n      this._attachProps(newProps);\r\n    };\r\n\r\n    _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\r\n      if (this._component !== this._prevComponent) {\r\n        this._propsAnimated.setNativeView(this._component);\r\n      }\r\n\r\n      if (this._component !== this._prevComponent || prevProps !== this.props) {\r\n        this._detachNativeEvents();\r\n\r\n        this._attachNativeEvents();\r\n      }\r\n    };\r\n\r\n    _proto.render = function render() {\r\n      var props = this._propsAnimated.__getValue();\r\n\r\n      return React.createElement(Component, _extends({}, defaultProps, props, {\r\n        ref: this._setComponentRef // The native driver updates views directly through the UI thread so we\r\n        // have to make sure the view doesn't get optimized away because it cannot\r\n        // go through the NativeViewHierarchyManager since it operates on the shadow\r\n        // thread.\r\n        ,\r\n        collapsable: false\r\n      }));\r\n    };\r\n\r\n    // A third party library can use getNode()\r\n    // to get the node reference of the decorated component\r\n    _proto.getNode = function getNode() {\r\n      return this._component;\r\n    };\r\n\r\n    return AnimatedComponent;\r\n  }(React.Component);\r\n\r\n  AnimatedComponent.__skipSetNativeProps_FOR_TESTS_ONLY = false;\r\n  var propTypes = Component.propTypes;\r\n  return AnimatedComponent;\r\n}\r\n\r\nexport default createAnimatedComponent;"]},"metadata":{},"sourceType":"module"}