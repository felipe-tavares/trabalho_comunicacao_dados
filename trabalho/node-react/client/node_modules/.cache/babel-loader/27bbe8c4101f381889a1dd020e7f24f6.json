{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samuk_000\\\\node-react\\\\client\\\\src\\\\Screen1.js\";\nimport React, { Component } from 'react';\nimport { TextInput, StyleSheet, View, Button, ActivityIndicator } from 'react-native';\nimport logo from \"./logo.svg\";\nimport './Screen1.css';\nexport default class Screen1 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.callApi = async () => {\n      const response = await fetch('/api/mensagem');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const response = await fetch('/api/nums', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          post: this.state.min\n        })\n      });\n      const body = await response.text();\n      this.setState({\n        responseToPost: body\n      });\n    };\n\n    this.state = {\n      min: '',\n      max: '',\n      isLoading: false,\n      message: \"\",\n      response: '',\n      post: '',\n      responseToPost: ''\n    };\n  }\n\n  onChangeHandler(field, value) {\n    this.setState({\n      [field]: value\n    });\n  }\n\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      response: res.express\n    })).catch(err => console.log(err));\n  }\n\n  acessarApp() {\n    this.setState({\n      isLoading: false\n    });\n    this.props.navigation.replace('Habitos');\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Screen1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"Screen1-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"Screen1-logo\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"Screen1-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, \"Welcome to React App\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"Screen1-intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, this.state.response), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"From: (min number)\",\n      type: \"text\",\n      value: this.state.min,\n      onChange: e => this.setState({\n        min: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"To: (max number)\",\n      type: \"text\",\n      value: this.state.max,\n      onChange: e => this.setState({\n        max: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(View, {\n      style: styles.btn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      color: \"#6542f4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, \"SORTEAR\"))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, this.state.responseToPost));\n  }\n\n} //{this.renderButton()}\n//onChangeText={value => this.onChangeHandler('min', value)}\n\n/*\r\n<p>{this.state.response}</p>\r\n<form onSubmit={this.handleSubmit}>\r\n    <input\r\n        type=\"text\"\r\n        value={this.state.post}\r\n        onChange={e => this.setState({ post: e.target.value })}\r\n    />\r\n    <button type=\"submit\">Submit</button>\r\n</form>\r\n<p>{this.state.responseToPost}</p>\r\n*/\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 10,\n    backgroundColor: 'white',\n    marginTop: 5,\n    marginBottom: 5,\n    elevation: 0.5\n  },\n  scrv: {\n    backgroundColor: '#2C1526'\n  },\n  input: {\n    paddingLeft: 5,\n    paddingRight: 5\n  },\n  btn: {\n    paddingTop: 20,\n    fontSize: 11\n  },\n  loading: {\n    padding: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/samuk_000/node-react/client/src/Screen1.js"],"names":["React","Component","TextInput","StyleSheet","View","Button","ActivityIndicator","Screen1","constructor","props","callApi","response","fetch","body","json","status","Error","message","handleSubmit","e","preventDefault","method","headers","JSON","stringify","post","state","min","text","setState","responseToPost","max","isLoading","onChangeHandler","field","value","componentDidMount","then","res","express","catch","err","console","log","acessarApp","navigation","replace","render","logo","target","styles","btn","create","container","padding","backgroundColor","marginTop","marginBottom","elevation","scrv","input","paddingLeft","paddingRight","paddingTop","fontSize","loading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { TextInput, StyleSheet, View, Button, ActivityIndicator } from 'react-native';\r\nimport logo from './logo.svg';\r\nimport './Screen1.css';\r\n\r\nexport default class Screen1 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            min: '',\r\n            max: '',\r\n            isLoading: false,\r\n            message: \"\",\r\n            response: '',\r\n            post: '',\r\n            responseToPost: '',\r\n        };\r\n    }\r\n\r\n    onChangeHandler(field, value) {\r\n        this.setState({ [field]: value });\r\n    }\r\n\r\n  componentDidMount() {\r\n    this.callApi()\r\n      .then(res => this.setState({ response: res.express }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  callApi = async () => {\r\n    const response = await fetch('/api/mensagem');\r\n    const body = await response.json();\r\n    if (response.status !== 200) throw Error(body.message);\r\n\r\n    return body;\r\n    };\r\n\r\n    handleSubmit = async e => {\r\n        e.preventDefault();\r\n        const response = await fetch('/api/nums', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ post: this.state.min }),\r\n        });\r\n        const body = await response.text();\r\n\r\n        this.setState({ responseToPost: body });\r\n    };\r\n\r\n    acessarApp() {\r\n        this.setState({ isLoading: false });\r\n        this.props.navigation.replace('Habitos');\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Screen1\">\r\n        <header className=\"Screen1-header\">\r\n                <img src={logo} className=\"Screen1-logo\" alt=\"logo\" />\r\n                <h4 className=\"Screen1-title\">Welcome to React App</h4>\r\n        </header>\r\n            <p className=\"Screen1-intro\">{this.state.response}</p>\r\n\r\n            <form onSubmit={this.handleSubmit}>\r\n                <input\r\n                    placeholder=\"From: (min number)\"\r\n                    type=\"text\"\r\n                    value={this.state.min}\r\n                    onChange={e => this.setState({ min: e.target.value })}\r\n                />\r\n                <input\r\n                    placeholder=\"To: (max number)\"\r\n                    type=\"text\"\r\n                    value={this.state.max}\r\n                    onChange={e => this.setState({ max: e.target.value })}\r\n                />\r\n                <View style={styles.btn}>\r\n                    <button type=\"submit\"\r\n                            color='#6542f4'\r\n                    >SORTEAR\r\n                    </button>\r\n                </View>\r\n            </form>\r\n            \r\n            <p>{this.state.responseToPost}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n//{this.renderButton()}\r\n//onChangeText={value => this.onChangeHandler('min', value)}\r\n/*\r\n<p>{this.state.response}</p>\r\n<form onSubmit={this.handleSubmit}>\r\n    <input\r\n        type=\"text\"\r\n        value={this.state.post}\r\n        onChange={e => this.setState({ post: e.target.value })}\r\n    />\r\n    <button type=\"submit\">Submit</button>\r\n</form>\r\n<p>{this.state.responseToPost}</p>\r\n*/\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        padding: 10,\r\n        backgroundColor: 'white',\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n        elevation: 0.5,\r\n    },\r\n    scrv: {\r\n        backgroundColor: '#2C1526',\r\n    },\r\n    input: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5,\r\n    },\r\n    btn: {\r\n        paddingTop: 20,\r\n        fontSize: 11,\r\n    },\r\n    loading: {\r\n        padding: 20,\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}