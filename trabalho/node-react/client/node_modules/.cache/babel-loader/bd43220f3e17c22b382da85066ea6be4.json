{"ast":null,"code":"/**\r\n * Copyright (c) Nicolas Gallagher.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\nvar supportedProps = {\n  accessibilityLabel: true,\n  accessibilityLiveRegion: true,\n  accessibilityRelationship: true,\n  accessibilityRole: true,\n  accessibilityState: true,\n  accessible: true,\n  children: true,\n  disabled: true,\n  importantForAccessibility: true,\n  nativeID: true,\n  onBlur: true,\n  onContextMenu: true,\n  onFocus: true,\n  onMoveShouldSetResponder: true,\n  onMoveShouldSetResponderCapture: true,\n  onResponderEnd: true,\n  onResponderGrant: true,\n  onResponderMove: true,\n  onResponderReject: true,\n  onResponderRelease: true,\n  onResponderStart: true,\n  onResponderTerminate: true,\n  onResponderTerminationRequest: true,\n  onScrollShouldSetResponder: true,\n  onScrollShouldSetResponderCapture: true,\n  onSelectionChangeShouldSetResponder: true,\n  onSelectionChangeShouldSetResponderCapture: true,\n  onStartShouldSetResponder: true,\n  onStartShouldSetResponderCapture: true,\n  onTouchCancel: true,\n  onTouchCancelCapture: true,\n  onTouchEnd: true,\n  onTouchEndCapture: true,\n  onTouchMove: true,\n  onTouchMoveCapture: true,\n  onTouchStart: true,\n  onTouchStartCapture: true,\n  pointerEvents: true,\n  style: true,\n  testID: true,\n\n  /* @platform web */\n  onScroll: true,\n  onWheel: true,\n  // keyboard events\n  onKeyDown: true,\n  onKeyPress: true,\n  onKeyUp: true,\n  // mouse events (e.g, hover effects)\n  onMouseDown: true,\n  onMouseEnter: true,\n  onMouseLeave: true,\n  onMouseMove: true,\n  onMouseOver: true,\n  onMouseOut: true,\n  onMouseUp: true,\n  // unstable escape-hatches for web\n  href: true,\n  itemID: true,\n  itemRef: true,\n  itemProp: true,\n  itemScope: true,\n  itemType: true,\n  onClick: true,\n  onClickCapture: true,\n  rel: true,\n  target: true\n};\n\nvar filterSupportedProps = function filterSupportedProps(props) {\n  var safeProps = {};\n\n  for (var prop in props) {\n    if (props.hasOwnProperty(prop)) {\n      if (supportedProps[prop] || prop.indexOf('aria-') === 0 || prop.indexOf('data-') === 0) {\n        safeProps[prop] = props[prop];\n      }\n    }\n  }\n\n  return safeProps;\n};\n\nexport default filterSupportedProps;","map":{"version":3,"sources":["C:/Users/samuk_000/trabalho_comunicacao_dados-master/trabalho/node-react/node_modules/react-native-web/dist/exports/View/filterSupportedProps.js"],"names":["supportedProps","accessibilityLabel","accessibilityLiveRegion","accessibilityRelationship","accessibilityRole","accessibilityState","accessible","children","disabled","importantForAccessibility","nativeID","onBlur","onContextMenu","onFocus","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onResponderEnd","onResponderGrant","onResponderMove","onResponderReject","onResponderRelease","onResponderStart","onResponderTerminate","onResponderTerminationRequest","onScrollShouldSetResponder","onScrollShouldSetResponderCapture","onSelectionChangeShouldSetResponder","onSelectionChangeShouldSetResponderCapture","onStartShouldSetResponder","onStartShouldSetResponderCapture","onTouchCancel","onTouchCancelCapture","onTouchEnd","onTouchEndCapture","onTouchMove","onTouchMoveCapture","onTouchStart","onTouchStartCapture","pointerEvents","style","testID","onScroll","onWheel","onKeyDown","onKeyPress","onKeyUp","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOver","onMouseOut","onMouseUp","href","itemID","itemRef","itemProp","itemScope","itemType","onClick","onClickCapture","rel","target","filterSupportedProps","props","safeProps","prop","hasOwnProperty","indexOf"],"mappings":"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","sourcesContent":["/**\r\n * Copyright (c) Nicolas Gallagher.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\nvar supportedProps = {\r\n  accessibilityLabel: true,\r\n  accessibilityLiveRegion: true,\r\n  accessibilityRelationship: true,\r\n  accessibilityRole: true,\r\n  accessibilityState: true,\r\n  accessible: true,\r\n  children: true,\r\n  disabled: true,\r\n  importantForAccessibility: true,\r\n  nativeID: true,\r\n  onBlur: true,\r\n  onContextMenu: true,\r\n  onFocus: true,\r\n  onMoveShouldSetResponder: true,\r\n  onMoveShouldSetResponderCapture: true,\r\n  onResponderEnd: true,\r\n  onResponderGrant: true,\r\n  onResponderMove: true,\r\n  onResponderReject: true,\r\n  onResponderRelease: true,\r\n  onResponderStart: true,\r\n  onResponderTerminate: true,\r\n  onResponderTerminationRequest: true,\r\n  onScrollShouldSetResponder: true,\r\n  onScrollShouldSetResponderCapture: true,\r\n  onSelectionChangeShouldSetResponder: true,\r\n  onSelectionChangeShouldSetResponderCapture: true,\r\n  onStartShouldSetResponder: true,\r\n  onStartShouldSetResponderCapture: true,\r\n  onTouchCancel: true,\r\n  onTouchCancelCapture: true,\r\n  onTouchEnd: true,\r\n  onTouchEndCapture: true,\r\n  onTouchMove: true,\r\n  onTouchMoveCapture: true,\r\n  onTouchStart: true,\r\n  onTouchStartCapture: true,\r\n  pointerEvents: true,\r\n  style: true,\r\n  testID: true,\r\n\r\n  /* @platform web */\r\n  onScroll: true,\r\n  onWheel: true,\r\n  // keyboard events\r\n  onKeyDown: true,\r\n  onKeyPress: true,\r\n  onKeyUp: true,\r\n  // mouse events (e.g, hover effects)\r\n  onMouseDown: true,\r\n  onMouseEnter: true,\r\n  onMouseLeave: true,\r\n  onMouseMove: true,\r\n  onMouseOver: true,\r\n  onMouseOut: true,\r\n  onMouseUp: true,\r\n  // unstable escape-hatches for web\r\n  href: true,\r\n  itemID: true,\r\n  itemRef: true,\r\n  itemProp: true,\r\n  itemScope: true,\r\n  itemType: true,\r\n  onClick: true,\r\n  onClickCapture: true,\r\n  rel: true,\r\n  target: true\r\n};\r\n\r\nvar filterSupportedProps = function filterSupportedProps(props) {\r\n  var safeProps = {};\r\n\r\n  for (var prop in props) {\r\n    if (props.hasOwnProperty(prop)) {\r\n      if (supportedProps[prop] || prop.indexOf('aria-') === 0 || prop.indexOf('data-') === 0) {\r\n        safeProps[prop] = props[prop];\r\n      }\r\n    }\r\n  }\r\n\r\n  return safeProps;\r\n};\r\n\r\nexport default filterSupportedProps;"]},"metadata":{},"sourceType":"module"}